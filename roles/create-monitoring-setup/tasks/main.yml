---
# tasks file for create-monitoring-setup
#

- name: Gathering Zones
  aws_az_facts:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    region: us-east-1
  register: zones1

- name: Apply Tiller/RBAC definition.
  shell : "kubectl create -f rbac/rbac-config.yaml"
  register: helm_tiller_result
  changed_when: "'AlreadyExists' not in helm_tiller_result.stdout"

- name: Installing Tiller
  shell: "helm init --service-account tiller --wait"
  #register: helm_init_result
  #changed_when: "'has been installed' not in helm_init_result.stdout"

- name: Enable Incubator repositories
  shell: "helm repo add incubator https://kubernetes-charts-incubator.storage.googleapis.com/"

- name: Helm repo update
  shell: "helm repo update"

- name: Install Fluentd
  #shell: "helm install --name fluentd --namespace fluentd --set awsAccessKeyId=aws_access_key --set awsSecretAccessKey=aws_secret_key --set awsRegion=us-east-1 --set rbac.create=true incubator/fluentd-cloudwatch"
  shell: "helm install --name fluentd --namespace fluentd --set awsAccessKeyId=\"{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}\" --set awsSecretAccessKey=\"{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}\" --set awsRegion=us-east-1 --set logGroupName=k8s --set rbac.create=true incubator/fluentd-cloudwatch"

- name: Install prometheus
  shell: "helm install --name prometheus --namespace prometheus --values prometheus/prometheus.values stable/prometheus"
  register: prometheus_logs

- name: Apply Grafana Config
  shell : "kubectl apply -f roles/create-monitoring-setup/files/grafana-config.yml"
  register: helm_tiller_result
  #changed_when: "'AlreadyExists' not in helm_tiller_result.stdout"

- name: Apply Persistence Volume Claim
  shell : "kubectl apply -f roles/create-monitoring-setup/files/pv-claim.yml"
  register: helm_tiller_result

- name : Install Grafana
  shell: "helm install -f grafana/grafana.values --name grafana --namespace grafana stable/grafana"

- name: Get Grafana Password
  shell: "kubectl get secret --namespace grafana grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo"
  register: admin_password

# - name: SomeThing
#   shell: " helm install --name external-dns --set provider=aws --set aws.zoneType=private --set aws.accessKey=AKIA3OFNZGJ3HYJF5PK4 --set aws.secretKey=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 --set aws.region=us-east-1 --set policy=upsert-only --set domainFilters[0]=dev.csye6225-spring2019-balania.me stable/external-dns"
# helm install --name external-dns \
#   --set provider=aws \
#   --set aws.zoneType=public \
#   --set txtOwnerId=HOSTED_ZONE_IDENTIFIER \
#   --set domainFilters[0]=HOSTED_ZONE_NAME \
#   stable/external-dns
  #- name: Creating Grafana Datasour  ce using Prometheus
  #grafana_datasource:
  #  name: "datasource-prometheus"
  #  grafana_url: "http://localhost:3000"
  #  grafana_user: "admin"
  #  grafana_password: "{{ admin_password.stdout }}"
  #  org_id: 1
  #  ds_type: "prometheus"
  #  ds_url: "http://127.0.0.1:9090"
  #  state: present
